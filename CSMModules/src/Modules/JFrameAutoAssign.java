/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JFrameAutoAssign.java
 *
 * Created on 2012-3-6, 23:11:15
 */
package Modules;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.Enumeration;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;

/**
 *
 * @author Administrator
 */
public class JFrameAutoAssign extends javax.swing.JFrame {

    Vector columnType = new Vector();
    boolean addSerial = true;
    boolean hasSelected = false;
    boolean hasClient = false;
    boolean assigned = false;
    boolean saved = false;

    /** Creates new form JFrameAutoAssign */
    public JFrameAutoAssign() {
        initComponents();
        int iThisWidth = 900;
        int iThisHight = 688;
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (screen.width - iThisWidth) / 2;
        int y = (screen.height - iThisHight) / 2;
        this.setBounds(x, y - 10, iThisWidth, iThisHight);
        fetchServiceperson();
        //注册键盘监听器，监听键盘动作，把系统无操作等待计时器置0;对非管理员屏蔽批量数据复制
        MainMenu.registerKeyListener(jTable1);
        MainMenu.registerKeyListener(jTable2);
        MainMenu.registerKeyListener(jTable3);
        MainMenu.registerKeyListener(jTable4);
        //注册鼠标动作监听器，监听鼠标动作，把系统无操作等待计时器置0
        MainMenu.registerMouseListener(this);
        MainMenu.registerMouseListener(jTable1);
        MainMenu.registerMouseListener(jTable2);
        MainMenu.registerMouseListener(jTable3);
        MainMenu.registerMouseListener(jTable4);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTextFieldBottom = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldTop = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("自动分配客户");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setText("资产下限");

        jLabel2.setText(" 资产上限");

        jButton1.setText("查询待分配客户");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("自动分配给所选投顾");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("保存分配结果");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton4.setText("选择投顾");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel3.setText("待分配客户清单");

        jLabel4.setText("投顾清单");

        jLabel5.setText("待安排投顾");

        jLabel6.setText("本次分配结果统计");

        jButton5.setText("取消");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("清除选择");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("操作说明");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(187, 187, 187)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 336, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(178, 178, 178))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton4)
                                    .addComponent(jButton6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(44, 44, 44)
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextFieldBottom, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextFieldTop, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(39, 39, 39)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)
                                .addGap(4, 4, 4)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7)
                                .addGap(10, 10, 10)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 342, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(257, 257, 257))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldBottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton5)
                    .addComponent(jButton3)
                    .addComponent(jButton7))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jButton4)
                        .addGap(73, 73, 73)
                        .addComponent(jButton6))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        double asset_bottom = 0.00;
        double asset_top = 99999999999.99;


        String s = jTextFieldBottom.getText().trim();
        String s1 = jTextFieldTop.getText().trim();
        if (!s.isEmpty()) {
            try {
                asset_bottom = Double.valueOf(s).doubleValue();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "资产下限数据格式错！");
                return;
            }
        }
        if (!s1.isEmpty()) {
            try {
                asset_top = Double.valueOf(s1).doubleValue();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "资产上限数据格式错！");
                return;
            }
        }
        String sql = "get_client_list2_1 ";
        sql = sql + JFrameLogin.user_id + "," + asset_bottom + "," + asset_top;
        JDBTableModel dm = new JDBTableModel(jTable1);
        addSerial = true;
        dm.fetchDataToTable(Main.conn, sql, columnType, addSerial);
        if (jTable1.getRowCount() >= 1) {
            hasClient = true;
        }

        int r = jTable4.getRowCount();
        int c = jTable4.getColumnCount();
        DefaultTableModel dm4 = new DefaultTableModel(r, c);
        jTable4.setModel(dm4);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int selectedRow = jTable2.getSelectedRowCount();
        if (selectedRow == 0) {
            JOptionPane.showMessageDialog(this, "请先用鼠标点击记录");
            return;
        }
        int[] selectedRowNo = jTable2.getSelectedRows();

        Vector title = new Vector();
        Vector content = new Vector();
        Vector content_new = new Vector();
        DefaultTableModel tableModel3;
        TableModel m2 = jTable2.getModel();
        TableModel m2_1 = jTable3.getModel();

        int columnCount = 3;
        for (int i = 0; i < columnCount; i++) {
            String columnName = m2.getColumnName(i);
            title.add(columnName);
        }

        for (int r = 0; r < selectedRow; r++) {
            boolean selected = false;
            int mr = jTable2.convertRowIndexToModel(selectedRowNo[r]);
            Vector row = new Vector();
            for (int c = 0; c < columnCount; c++) {
                if (c == 1) {
                    String id2 = m2.getValueAt(mr, c).toString().trim();
                    jTable3.getRowCount();
                    if (hasSelected) {
                        for (int r2_1 = 0; r2_1 < jTable3.getRowCount(); r2_1++) {
                            String id2_1 = m2_1.getValueAt(r2_1, c).toString().trim();
                            //System.out.println("id2=" + id2 + ",id2_1=" + id2_1);
                            if (id2.equals(id2_1)) {
                                selected = true;
                            }
                        }
                    }
                }
                row.add(m2.getValueAt(mr, c));
            }
            if (!selected) {
                content_new.add(row);
            // System.out.println("r=" + r);
            }
        }
        for (int r = 0; r < jTable3.getRowCount(); r++) {
            Vector row = new Vector();
            for (int c = 0; c < jTable3.getColumnCount(); c++) {
                Object cell = jTable3.getValueAt(r, c);
                row.add(cell);
            }
            if (hasSelected) {
                content.add(row);
            }
        }
        for (int r = 0; r < content_new.size(); r++) {
            //System.out.println("content_new.size()=" + content_new.size());
            Vector row_new = (Vector) content_new.get(r);
            content.add(row_new);
        }

        tableModel3 = new DefaultTableModel(content, title);
        jTable3.setModel(tableModel3);
        fitTableColumns(jTable3);//表格列宽自适应
        if (jTable3.getRowCount() >= 1) {
            hasSelected = true;
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int r = jTable3.getRowCount();
        int c = jTable3.getColumnCount();
        DefaultTableModel dm = new DefaultTableModel(r, c);
        jTable3.setModel(dm);
        hasSelected = false;
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        assigned = false;
        if (!hasClient) {
            JOptionPane.showMessageDialog(this, "请先查询待分配客户!");
            return;
        }
        if (!hasSelected) {
            JOptionPane.showMessageDialog(this, "请选择待安排的投顾!");
            return;
        }
        //用梯形分割法分配服务员
        int rowCount1 = jTable1.getRowCount();
        int rowCount2 = jTable3.getRowCount();
        int[] clientCount = new int[rowCount2];
        double[] sumAsset = new double[rowCount2];
        for (int i = 0; i < rowCount2; i++) {
            clientCount[i] = 0;
            sumAsset[i] = 0.0;
        }
        for (int r1 = 0; r1 < rowCount1; r1++) {
            int r2 = r1 % rowCount2;
            if (r1 / rowCount2 % 2 == 1) {
                r2 = rowCount2 - r2 - 1;
            }
            System.out.println("r1=" + r1 + ",r2=" + r2);//for test only
            Object servicePersonId = jTable3.getValueAt(r2, 1);
            Object servicePerson = jTable3.getValueAt(r2, 2);
            jTable1.setValueAt(servicePerson, r1, 4);
            jTable1.setValueAt(servicePersonId, r1, 5);
            String assetStr = jTable1.getValueAt(r1, 3).toString();
            double asset = Double.valueOf(assetStr).doubleValue();
            clientCount[r2] = clientCount[r2] + 1;
            sumAsset[r2] = sumAsset[r2] + asset;

        }
        for (int i = 0; i < rowCount2; i++) {//for test only
            System.out.println("clientCount=" + clientCount[i] + ",sumAsset=" + sumAsset[i]);
        }
        //产生分配统计表
        Vector title = new Vector();
        Vector content = new Vector();
        DefaultTableModel tableModel4;
        TableModel m3 = jTable3.getModel();
        for (int r = 0; r < m3.getRowCount(); r++) {
            Vector row = new Vector(m3.getRowCount());
            for (int c = 0; c < m3.getColumnCount(); c++) {
                Object cell = m3.getValueAt(r, c);
                row.add(cell);
            }
            Integer count = Integer.valueOf(clientCount[r]);
            Double sum = Double.valueOf(sumAsset[r]);
            System.out.println(sum);
            row.add(count);
            content.add(row);
            DecimalFormat myFormatter = new DecimalFormat("###,###,###,###.##");
            /*String s = String.format("%12.2f", sum);
            row.add(s);*/
            System.out.println(myFormatter.format(sum));
            row.add(myFormatter.format(sum));
        }
        for (int c = 0; c < jTable3.getColumnCount(); c++) {
            String columnName = m3.getColumnName(c);
            title.add(columnName);
        }
        title.add("客户数");
        title.add("资产合计");
        tableModel4 = new DefaultTableModel(content, title);
        jTable4.setModel(tableModel4);
        fitTableColumns(jTable4);//表格列宽自适应
        assigned = true;
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (!assigned) {
            JOptionPane.showMessageDialog(this, "请执行自动分配!");
            return;
        }
        if (saved) {
            JOptionPane.showMessageDialog(this, "数据已经保存!");
            return;
        }
        if (JOptionPane.showConfirmDialog(this, "确信保存本次分配结果?") != JOptionPane.YES_OPTION) {
            return;
        }
        int user_id = 0;
        for (int r = 0; r < jTable1.getRowCount(); r++) {
            String fundAccountS = jTable1.getValueAt(r, 1).toString().trim();
            String user_id_s = jTable1.getValueAt(r, 5).toString().trim();

            user_id = Integer.valueOf(user_id_s);
            long fundAccount = Long.valueOf(fundAccountS);
            System.out.println("user_id=" + user_id + ",fundAccount=" + fundAccount);
            assignServicePerson(user_id, 0, fundAccount);
        }
        JOptionPane.showMessageDialog(this, "数据已保存");
        saved = true;
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        new JFrameMsg2().setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    //表格列宽自适应方法
    private void fitTableColumns(JTable myTable) {
        JTableHeader header = myTable.getTableHeader();
        int rowCount = myTable.getRowCount();

        Enumeration columns = myTable.getColumnModel().getColumns();
        while (columns.hasMoreElements()) {
            TableColumn column = (TableColumn) columns.nextElement();
            int col = header.getColumnModel().getColumnIndex(column.getIdentifier());
            int width = (int) myTable.getTableHeader().getDefaultRenderer().getTableCellRendererComponent(myTable, column.getIdentifier(), false, false, -1, col).getPreferredSize().getWidth();
            for (int row = 0; row < rowCount; row++) {
                int preferedWidth = (int) myTable.getCellRenderer(row, col).getTableCellRendererComponent(myTable,
                        myTable.getValueAt(row, col), false, false, row, col).getPreferredSize().getWidth();
                width = Math.max(width, preferedWidth);
            }
            header.setResizingColumn(column); // 此行很重要
            column.setWidth(width + myTable.getIntercellSpacing().width);
        }
    }

    /**
     * @param args the command line arguments
     */
    private void fetchServiceperson() {
        String sql = "get_service_persons";
        JDBTableModel dm = new JDBTableModel(jTable2);
        addSerial = true;
        dm.fetchDataToTable(Main.conn, sql, columnType, addSerial);

    }

    public String assignServicePerson(int service_person_id, int analyst_id, long fund_account) {

        int returnStatus = 0;
        String returnMessage = "保存成功";
        PreparedStatement SqlStatement = null;
        try {
            SqlStatement = Main.conn.prepareStatement("execute assign_service_person ?,?,?,?");
            SqlStatement.setInt(1, service_person_id);
            SqlStatement.setLong(2, fund_account);
            SqlStatement.setInt(3, analyst_id);
            SqlStatement.setInt(4, JFrameLogin.user_id);

            Boolean HasResult = SqlStatement.execute();

            while (!HasResult) {
                HasResult = SqlStatement.getMoreResults();
            }
            if (HasResult) {
                ResultSet SqlResult = SqlStatement.getResultSet();
                while (SqlResult.next()) {
                    returnStatus = SqlResult.getInt("ret_status");
                    returnMessage = SqlResult.getString("ret_msg").trim();
                }
                SqlStatement.close();
            }

        } catch (SQLException ex) {
            Logger.getLogger(JFrameAssignServicePerson.class.getName()).log(Level.SEVERE, null, ex);
            Main.logger.warning(ex.getMessage());
        }
        return returnMessage;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextFieldBottom;
    private javax.swing.JTextField jTextFieldTop;
    // End of variables declaration//GEN-END:variables
}
