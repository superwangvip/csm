package Modules;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JFrameaRepoInfo.java
 *
 * Created on 2012-10-8, 22:30:09
 */
/**
 *
 * @author Administrator
 */
public class JFrameaRepoInfo extends javax.swing.JFrame {
    boolean hasData = false;
    /** Creates new form JFrameaRepoInfo */
    public JFrameaRepoInfo() {
        initComponents();
        int iThisWidth = 1022;
        int iThisHight = 680;
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (screen.width - iThisWidth) / 2;
        int y = (screen.height - iThisHight) / 2;
        this.setBounds(x, y - 10, iThisWidth, iThisHight);
        getRepoName();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldFundAccount = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxFinancing = new javax.swing.JComboBox();
        jButtonAccount = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("回购明细查询");

        jTable1.setFont(new java.awt.Font("宋体", 0, 14));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setDragEnabled(true);
        jTable1.setRowHeight(24);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTable2.setFont(new java.awt.Font("宋体", 0, 14));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable2.setColumnSelectionAllowed(true);
        jTable2.setDragEnabled(true);
        jTable2.setRowHeight(24);
        jScrollPane2.setViewportView(jTable2);

        jLabel3.setText("回购交易明细");

        jLabel2.setFont(new java.awt.Font("宋体", 0, 18));
        jLabel2.setText("资金帐号");

        jTextFieldFundAccount.setFont(new java.awt.Font("宋体", 0, 18));
        jTextFieldFundAccount.setForeground(new java.awt.Color(0, 0, 153));

        jLabel4.setText("回购品种");

        jLabel5.setForeground(new java.awt.Color(255, 0, 51));
        jLabel5.setText("注意：");

        jComboBoxFinancing.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButtonAccount.setText("按帐号查询");
        jButtonAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAccountActionPerformed(evt);
            }
        });

        jButton2.setText("批量查询");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("取消");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(51, 0, 255));
        jLabel6.setText("批量查询时，可选回购品种，如过不选即选第一条空白，则批量查询不会把回购品种做为查询条件");

        jLabel1.setText("开通回购交易的的客户清单(点击清单可列出回购交易明细)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)
                                .addGap(5, 5, 5)
                                .addComponent(jTextFieldFundAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(120, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(58, 58, 58)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxFinancing, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(jButtonAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 751, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(304, 304, 304)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 955, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 955, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(60, 60, 60)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldFundAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxFinancing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAccount)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        TableModel m = jTable1.getModel();
        int r = jTable1.getSelectedRow();
        int mr = jTable1.convertRowIndexToModel(r);
        String fundAccount = m.getValueAt(mr, 1).toString();
        String sql = "get_repo_details " + fundAccount;
        System.out.println(sql);
        JDBTableModel dm2 = new JDBTableModel(jTable2);
        Vector columnType = new Vector();
        boolean addSerial = true;
        dm2.fetchDataToTable(Main.conn, sql, columnType, addSerial);
        if (jTable1.getRowCount() > 0) {
            hasData = true;
        }
}//GEN-LAST:event_jTable1MouseClicked

    private void jButtonAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAccountActionPerformed
        long base = 0L;
        long fund_account = 0L;
        String FundAccount = jTextFieldFundAccount.getText().trim();
        String WholeAccount = null;

        if (Main.branchID >= 10) {
            base = Main.branchID * 10000000000L;
            try {
                fund_account = Long.valueOf(FundAccount).longValue();
                if (fund_account < 1000000000L) {
                    fund_account = base + fund_account;
                    WholeAccount = Long.valueOf(fund_account).toString();
                } else {
                    WholeAccount = FundAccount;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "帐号数据格式错！");
                return;
            }
        } else {
            base = Main.branchID * 10000000000L;
            try {
                fund_account = Long.valueOf(FundAccount).longValue();
                if (fund_account < 10000000000L) {
                    fund_account = base + fund_account;
                    WholeAccount = "0" + Long.valueOf(fund_account).toString();
                } else {
                    WholeAccount = FundAccount;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "帐号数据格式错！");
                return;
            }
        }
        //查询客户资料
        jTextFieldFundAccount.setText(WholeAccount);
        int user_id = JFrameLogin.user_id;
        String sql = "execute get_client_info ";
        sql = sql + user_id + "," + fund_account;
        System.out.println(sql);
        JDBTableModel dm = new JDBTableModel(jTable1);
        Vector columnType = new Vector();
        boolean addSerial = true;
        dm.fetchDataToTable(Main.conn, sql, columnType, addSerial);
        //查询客户回购交易明细
        sql = "get_repo_details " + WholeAccount;
        System.out.println(sql);
        JDBTableModel dm2 = new JDBTableModel(jTable2);
        dm2.fetchDataToTable(Main.conn, sql, columnType, addSerial);
        if (jTable1.getRowCount() > 0) {
            hasData = true;
        }
}//GEN-LAST:event_jButtonAccountActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int user_id = JFrameLogin.user_id;
        String stock_name = jComboBoxFinancing.getSelectedItem().toString();
        String sql = "execute get_client_by_repo  ";
        if (stock_name.equals("")) {
            sql = sql + user_id;
        } else {
            sql = sql + user_id + ",'" + stock_name + "'";
        }
        System.out.println(sql);
        JDBTableModel dm = new JDBTableModel(jTable1);
        Vector columnType = new Vector();
        boolean addSerial = true;
        dm.fetchDataToTable(Main.conn, sql, columnType, addSerial);
        //makeFace(jTable1);
        MainMenu.makeFace(jTable1);
        //--------------------------
        int r = jTable2.getRowCount();
        int c = jTable2.getColumnCount();
        DefaultTableModel dm2 = new DefaultTableModel(r, c);
        jTable2.setModel(dm2);
}//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
}//GEN-LAST:event_jButton1ActionPerformed
    private void getRepoName() {
        jComboBoxFinancing.removeAllItems();
        jComboBoxFinancing.addItem("");
        try {
            PreparedStatement SqlStatement = Main.conn.prepareStatement("select distinct stock_code,stock_name from repo_trading order by stock_code");
            Boolean HasResult = SqlStatement.execute();
            if (HasResult) {
                ResultSet SqlResult = SqlStatement.getResultSet();

                while (SqlResult.next()) {
                    String stock_name = SqlResult.getString(2);
                    jComboBoxFinancing.addItem(stock_name);
                }
            }

        } catch (SQLException ex) {
            Logger.getLogger(BasicInfo.class.getName()).log(Level.SEVERE, null, ex);
            Main.logger.warning(ex.getMessage());
        }
        jComboBoxFinancing.setSelectedIndex(0);
    }

    public static void makeFace(JTable table) {
        try {
            DefaultTableCellRenderer tcr = new DefaultTableCellRenderer() {

                @Override
                public Component getTableCellRendererComponent(JTable table,
                        Object value, boolean isSelected, boolean hasFocus,
                        int row, int column) {
                    TableModel m = table.getModel();

                    for (int i = 0; i < row + 1; i++) {

                        String contract = "";
                        String credit = "";
                        String repo_mark = "";
                        int mr = table.convertRowIndexToModel(i);
                        Object credit_O = m.getValueAt(mr, credit_column);

                        if (credit_O != null) {
                            credit = credit_O.toString().trim();
                        }
                        Object contract_O = m.getValueAt(mr, contract_column);
                        if (contract_O != null) {
                            contract = contract_O.toString().trim();
                        }
                        Object repo_O = m.getValueAt(mr, repo_column);
                        if (repo_O != null) {
                            repo_mark = repo_O.toString().trim();
                        }

                        if (contract.equals("签约")) {//签约客户以特浅蓝底深蓝字显示
                            setBackground(new Color(204, 255, 255));
                            setForeground(Color.blue);
                        } else if (credit.equals("已开通")) { //两融客户以特浅蓝底红色字显示
                            setBackground(new Color(204, 255, 255));
                            setForeground(Color.RED);
                        // } else if (repo_mark.equals("取消禁止融券")) {//开通回购的客户以红底篮字显示
                        //   setBackground(Color.PINK);
                        //   setForeground(Color.BLUE);
                        //} else {
                        } else {
                            setForeground(Color.BLACK);
                            setBackground(Color.WHITE);
                        }
                    }
                    return super.getTableCellRendererComponent(table, value,
                            isSelected, hasFocus, row, column);
                }
            };
            for (int i = 0; i < table.getColumnCount(); i++) {
                table.getColumn(table.getColumnName(i)).setCellRenderer(tcr);
            }
        } catch (Exception ex) {
            Logger.getLogger(JFrameRealtimeMonitor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    static int credit_column = 16;
    static int repo_column = 17;
    static int contract_column = 14;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAccount;
    private javax.swing.JComboBox jComboBoxFinancing;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextFieldFundAccount;
    // End of variables declaration//GEN-END:variables
}
