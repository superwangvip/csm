/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JFrameServiceMemo.java
 *
 * Created on 2011-8-16, 18:07:36
 */
package Modules;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;

/**
 *
 * @author Administrator
 */
public class JFrameServiceMemo extends javax.swing.JFrame {

    Vector columnType = new Vector();
    boolean addSerial = false;
    private int source = 0;
    private int operationType = 0;
    private final int ADD = 1;
    private final int DELETE = 2;
    private final int NO_ACTION = 0;
    private boolean GO_ON = true;

    /** Creates new form JFrameServiceMemo */
    public JFrameServiceMemo() {
        initComponents();
        int iThisWidth = 810;
        int iThisHight = 390;
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (screen.width - iThisWidth) / 2;
        int y = (screen.height - iThisHight) / 2;
        this.setBounds(x, y - 10, iThisWidth, iThisHight);
        this.setPreferredSize(screen);
        jTextFieldMemo.setText("");
        jTextFieldDate.setText("");
        jTextFieldMemo.setEditable(false);
        jTextFieldDate.setEditable(false);
        String sql = "execute list_service_memo " + JFrameLogin.user_id;
        JDBTableModel dm = new JDBTableModel(jTable1);
        dm.fetchDataToTable(Main.conn, sql, columnType, addSerial);
        jTextFieldDate.setText(getNextDate());
        jTextFieldMemo.setEditable(false);
        jTextFieldDate.setEditable(false);

        //注册键盘监听器，监听键盘动作，把系统无操作等待计时器置0;对非管理员屏蔽批量数据复制
        MainMenu.registerKeyListener(jTable1);
        //注册鼠标动作监听器，监听鼠标动作，把系统无操作等待计时器置0
        MainMenu.registerMouseListener(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jTextFieldMemo = new javax.swing.JTextField();
        jTextFieldDate = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButtonAdd = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("服务备忘录");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jTable1.setFont(new java.awt.Font("宋体", 0, 18));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel1.setText("备忘录内容");

        jLabel2.setText("提醒日期");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldMemo, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE)
                    .addComponent(jTextFieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldMemo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jButtonAdd.setText("添加");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonSave.setText("保存");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonDelete.setText("删除");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonCancel.setText("取消");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jButtonAdd)
                        .addGap(72, 72, 72)
                        .addComponent(jButtonSave)
                        .addGap(62, 62, 62)
                        .addComponent(jButtonDelete)
                        .addGap(58, 58, 58)
                        .addComponent(jButtonCancel))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonCancel)
                        .addComponent(jButtonDelete)
                        .addComponent(jButtonSave))
                    .addComponent(jButtonAdd))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        jTextFieldMemo.setEditable(true);
        jTextFieldDate.setEditable(true);
        operationType = ADD;
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        save_data();
        String sql = "execute list_service_memo "+JFrameLogin.user_id;
        JDBTableModel dm = new JDBTableModel(jTable1);
        dm.fetchDataToTable(Main.conn, sql, columnType, addSerial);
        jTextFieldMemo.setEditable(false);
        jTextFieldMemo.setText("");
        jTextFieldDate.setEditable(false);
        jTextFieldDate.setText("");
        operationType = NO_ACTION;
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        int r = jTable1.getSelectedRow();
        if (r == -1) {
            JOptionPane.showMessageDialog(this, "请先选择要删除的记录（用鼠标点击记录)");
            return;
        }
        TableModel m = jTable1.getModel();
        String s = m.getValueAt(jTable1.convertRowIndexToModel(r), 3).toString();
        int memo_id = Integer.valueOf(s).intValue();
        
        if (JOptionPane.showConfirmDialog(this, "确信删除序号为:" + memo_id + " 的记录") == JOptionPane.YES_OPTION) {
            operationType = DELETE;
            save_data();

            String sql = "execute list_service_memo " + JFrameLogin.user_id;
            JDBTableModel dm = new JDBTableModel(jTable1);
            dm.fetchDataToTable(Main.conn, sql, columnType, addSerial);
        }
        jTextFieldMemo.setEditable(false);
        jTextFieldMemo.setText("");
        jTextFieldDate.setEditable(false);
        jTextFieldDate.setText("");
        operationType = NO_ACTION;
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    private static String getNextDate() {
        String date = "1900";
        GregorianCalendar d = new GregorianCalendar();
        int thisYear = d.get(Calendar.YEAR);
        int thisMonth = d.get(Calendar.MONTH) + 1;
        int thisDay = d.get(Calendar.DAY_OF_MONTH) + 1;

        date = String.format("%4d%02d%02d", thisYear, thisMonth, thisDay);
        return date;
    }

    private void save_data() {
        int ret_status = 0;
        String ret_message = "保存成功";
        PreparedStatement SqlStatement;
        if ((operationType == ADD) && GO_ON) {
            try {
                // TODO add your handling code here:
                String memo = jTextFieldMemo.getText();
                String remind_date = jTextFieldDate.getText().trim();
                if (remind_date.equals("")) {
                    JOptionPane.showMessageDialog(this, "佣金为空");
                    return;
                }

                SqlStatement = Main.conn.prepareStatement("execute add_service_memo ?,?,?");

                SqlStatement.setInt(1, JFrameLogin.user_id);
                SqlStatement.setString(2, memo);
                SqlStatement.setString(3, remind_date);

                Boolean HasResult = SqlStatement.execute();

                while (!HasResult) {
                    HasResult = SqlStatement.getMoreResults();
                }
                if (HasResult) {
                    ResultSet SqlResult = SqlStatement.getResultSet();
                    while (SqlResult.next()) {
                        ret_status = SqlResult.getInt("ret_status");
                        ret_message = SqlResult.getString("ret_msg");//????
                    }
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "数据录入错 !");
            } catch (SQLException ex) {
                Logger.getLogger(JFrameMarketMatchAmount.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex.getLocalizedMessage());
            }

        } else if (operationType == DELETE) {
            try {
                int r = jTable1.getSelectedRow();
                TableModel m = jTable1.getModel();
                String s = m.getValueAt(jTable1.convertRowIndexToModel(r), 3).toString();
                int memo_id = Integer.valueOf(s);

                SqlStatement = Main.conn.prepareStatement("execute delete_service_memo ?,?");
                 SqlStatement.setInt(1, JFrameLogin.user_id);
                SqlStatement.setInt(2, memo_id);

                Boolean HasResult = SqlStatement.execute();
                while (!HasResult) {
                    HasResult = SqlStatement.getMoreResults();
                }
                if (HasResult) {
                    ResultSet SqlResult = SqlStatement.getResultSet();

                    while (SqlResult.next()) {
                        ret_status = SqlResult.getInt("ret_status");
                        ret_message = SqlResult.getString("ret_msg");
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(JFrameMarketMatchAmount.class.getName()).log(Level.SEVERE, null, ex);
                Main.logger.warning(ex.getMessage());
            }

        } else {
            ret_message = "你没有操作或者最近添加已经保存";
        }
        JOptionPane.showMessageDialog(this, ret_message);
        operationType = NO_ACTION;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldDate;
    private javax.swing.JTextField jTextFieldMemo;
    // End of variables declaration//GEN-END:variables
}
