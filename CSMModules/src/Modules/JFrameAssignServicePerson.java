/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JFrameAssignServicePerson.java
 *
 * Created on 2010-4-24, 15:58:49
 */
package Modules;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.text.ParseException;
import java.util.Calendar;
import java.util.Enumeration;
import java.util.GregorianCalendar;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.TableModel;
import javax.swing.text.MaskFormatter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class JFrameAssignServicePerson extends javax.swing.JFrame {

    Vector columnType = new Vector();
    boolean addSerial = true;
    boolean forService = false;//true=安排服务员，false=安排回访员
    private int fetch_way = 0;
    private final int FETCH_BY_FUND_ACCOUNT = 1;
    private final int FETCH_BY_FILTER = 2;
    private final int FETCH_ALL = 3;

    /** Creates new form JFrameAssignServicePerson */
    public JFrameAssignServicePerson(int source) {
        initComponents();
        jLabelTitle.setText(Main.branchName);
        if (source == 1) {
            forService = true;
            jTextFieldMsg.setText("服务安排");
        } else {
            forService = false;
            jTextFieldMsg.setText("回访安排");
        }

        if (Main.workFlow.trim().equals("先回访再服务")) {
            jTextField1.setText("流程：先回访再服务");
        } else {
            jTextField1.setText("流程：直接安排服务");
        }

        jComboBoxUser.removeAllItems();
        if (forService) {
            jComboBoxUser.addItem("无指定服务员");
        } else {
            jComboBoxUser.addItem("无指定回访员");
        }
        BasicInfo bsi = BasicInfo.getBaseicInfo();
        if (forService) {
            servicePerson = bsi.getServicePerson();
            servicePersonID = bsi.getServicePersonID();
            jLabel1.setText("待指定的服务人员");
        } else {
            servicePerson = bsi.getBackCaller();
            servicePersonID = bsi.getBackCallerID();
            jLabel1.setText("待指定的回访员");
        }
        Enumeration enum1 = servicePerson.elements();
        while (enum1.hasMoreElements()) {
            String servicePerson1 = enum1.nextElement().toString();
            jComboBoxUser.addItem(servicePerson1);
        }
        if (forService) {
            jComboBoxUser.addItem("取消服务员");
        } else {
            jComboBoxUser.addItem("取消回访员");
        }
        jComboBoxUser1.removeAllItems();
        jComboBoxUser1.addItem("无指定分析师");
        analyst = bsi.getAnalyst();
        analystID = bsi.getAnalystID();
        Enumeration enum2 = analyst.elements();
        while (enum2.hasMoreElements()) {
            String servicePerson2 = enum2.nextElement().toString();
            jComboBoxUser1.addItem(servicePerson2);
        }
        jComboBoxUser1.addItem("取消分析师");
        int iThisWidth = 1012;
        int iThisHight = 720;
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (screen.width - iThisWidth) / 2;
        int y = (screen.height - iThisHight) / 2;
        this.setBounds(x, y - 10, iThisWidth, iThisHight);
        jTextFieldBottom.getCursor();
        if (!forService) {
            jComboBoxUser1.setEnabled(false);
            jLabel10.setVisible(false);
            jLabel11.setVisible(false);
        }

        //注册键盘监听器，监听键盘动作，把系统无操作等待计时器置0;对非管理员屏蔽批量数据复制

        MainMenu.registerKeyListener(jTable1);
        MainMenu.registerKeyListener(jTable2);
        //注册鼠标动作监听器，监听鼠标动作，把系统无操作等待计时器置0
         MainMenu.registerMouseListener(this);
        MainMenu.registerMouseListener(jTable1);
        MainMenu.registerMouseListener(jTable2);
    }

    MaskFormatter getFormatter(String s) {
        MaskFormatter mFormatter = null;
        try {
            mFormatter = new MaskFormatter(s);

        } catch (ParseException ex) {
            Logger.getLogger(JFrameAssignServicePerson.class.getName()).log(Level.SEVERE, null, ex);
            Main.logger.warning(ex.getLocalizedMessage());
            JOptionPane.showMessageDialog(this, ex.getLocalizedMessage());
        }
        return mFormatter;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jComboBoxUser = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jTextFieldMsg = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldBottom = new javax.swing.JTextField();
        jTextFieldTop = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldFundAccount = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldDate1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldDate2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldAgent = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jCheckBoxNoAgent = new javax.swing.JCheckBox();
        jComboBoxStatus = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabelTitle = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jComboBoxUser1 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("为客户指定服务员");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setToolTipText("按下并保持住鼠标左键，上下拖动，可以一次选择多条记录(ctrl^A 全选)");
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable2.setColumnSelectionAllowed(true);
        jScrollPane2.setViewportView(jTable2);

        jComboBoxUser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxUserMouseClicked(evt);
            }
        });
        jComboBoxUser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBoxUserFocusGained(evt);
            }
        });
        jComboBoxUser.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBoxUserPropertyChange(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(51, 0, 204));
        jLabel1.setText("待指定的服务人员");

        jButton2.setText("数据过滤");
        jButton2.setToolTipText("过滤已安排的客户（包含资产条件)");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("保存");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("取消");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("选择到候选清单");
        jButton5.setToolTipText(" 先点击要选择客户记录，再按此按钮");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("清除候选清单");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jTextFieldMsg.setEditable(false);
        jTextFieldMsg.setFont(new java.awt.Font("宋体", 1, 18));
        jTextFieldMsg.setForeground(new java.awt.Color(51, 0, 153));
        jTextFieldMsg.setText("jTextField1");
        jTextFieldMsg.setFocusable(false);

        jLabel2.setText("资产下限");

        jLabel3.setText("资产上限");

        jButton7.setText("批量读取客户资料");
        jButton7.setToolTipText("要可按资产条件读取客户资料,请输入资产上下限");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel4.setText("帐号");

        jButton1.setText("按资金帐号查询");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("开户日期1（YYYYMMDD)");

        jLabel6.setText("开户日期2（YYYYMMDD)");

        jLabel7.setText("经纪人姓名");

        jButton8.setText("按帐号查询");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jCheckBoxNoAgent.setText("无经纪人");
        jCheckBoxNoAgent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxNoAgentActionPerformed(evt);
            }
        });

        jComboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "正常", "冻结", "销户" }));

        jLabel8.setText("账户状态");

        jLabelTitle.setFont(new java.awt.Font("宋体", 1, 24));
        jLabelTitle.setForeground(new java.awt.Color(255, 0, 0));
        jLabelTitle.setText("华西证券成都东一环路营业部");

        jTextField1.setText("jTextField1");
        jTextField1.setFocusable(false);

        jLabel9.setForeground(new java.awt.Color(51, 0, 204));
        jLabel9.setText("待指定的分析师");

        jComboBoxUser1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxUser1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxUser1MouseClicked(evt);
            }
        });
        jComboBoxUser1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBoxUser1FocusGained(evt);
            }
        });
        jComboBoxUser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBoxUser1PropertyChange(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(255, 0, 51));
        jLabel10.setText("注意事项：");

        jLabel11.setForeground(new java.awt.Color(51, 0, 255));
        jLabel11.setText("待指定服务员下拉框中的“无指定服务员”意味作不安排服务员，最后一选项为“取消服务员”意味作取消已经安排的服务员，待指定的分析师下拉框意思类似");

        jLabel12.setForeground(new java.awt.Color(51, 0, 204));
        jLabel12.setText("左边各输入项与选项是批量读取客户资料的查询条件，也可以在右边帐号框输入帐号");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 865, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel5))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldDate2, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                                            .addComponent(jTextFieldDate1, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)))
                                    .addComponent(jLabel3)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldTop, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextFieldBottom, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addGap(18, 18, 18)
                                            .addComponent(jTextFieldAgent, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8))
                                    .addComponent(jCheckBoxNoAgent, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                                .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jButton6, 0, 0, Short.MAX_VALUE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel4)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jTextFieldFundAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(10, 10, 10)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jComboBoxUser, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jComboBoxUser1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(189, 189, 189)
                                .addComponent(jLabelTitle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 336, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(34, 34, 34)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 964, Short.MAX_VALUE))
                        .addGap(10, 10, 10)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldMsg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(35, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton7)
                            .addComponent(jButton3)
                            .addComponent(jLabel4)
                            .addComponent(jTextFieldFundAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxNoAgent)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addGap(6, 6, 6)
                                .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton6)
                                    .addComponent(jButton4)
                                    .addComponent(jButton8)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBoxUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel9)
                                    .addComponent(jComboBoxUser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldBottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jTextFieldAgent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFieldTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextFieldDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextFieldDate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 990, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int selectedRow = jTable1.getSelectedRowCount();
        if (selectedRow == 0) {
            JOptionPane.showMessageDialog(this, "请先用鼠标点击记录");
            return;
        }
        int[] selectedRowNo = jTable1.getSelectedRows();

        Vector title = new Vector();
        Vector content = new Vector();
        DefaultTableModel tableModel2;

        TableModel m1 = jTable1.getModel();
        int columnCount = m1.getColumnCount();
        for (int i = 0; i < columnCount; i++) {
            String columnName = m1.getColumnName(i);
            title.add(columnName);
        }

        for (int r = 0; r < selectedRow; r++) {
            int mr = jTable1.convertRowIndexToModel(selectedRowNo[r]);
            Vector row = new Vector();
            for (int c = 0; c < columnCount; c++) {
                row.add(m1.getValueAt(mr, c));
            }
            content.add(row);
        }

        tableModel2 = new DefaultTableModel(content, title);
        jTable2.setModel(tableModel2);
        hasSelected = true;
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int r = jTable2.getRowCount();
        int c = jTable2.getColumnCount();
        DefaultTableModel dm = new DefaultTableModel(r, c);
        jTable2.setModel(dm);
        hasSelected = false;
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (!hasSelected) {
            JOptionPane.showMessageDialog(this, "你没有选择记录到候选清单!");
            return;
        }

        int n = jComboBoxUser.getSelectedIndex();
        int m = jComboBoxUser1.getSelectedIndex();
        if (forService && (n == 0 && m == 0)) {
            JOptionPane.showMessageDialog(this, "待指定服务员与待指定分析师必选其一!");
            return;
        }

        int user_id = 0;
        int analyst_id = 0;
        if (n > 0 && n < jComboBoxUser.getItemCount() - 1) {
            user_id = ((Integer) servicePersonID.elementAt(n - 1)).intValue();
        }
        if (m > 0 && m < jComboBoxUser1.getItemCount() - 1) {
            analyst_id = ((Integer) analystID.elementAt(m - 1)).intValue();
        }
        if (n == jComboBoxUser.getItemCount() - 1) {
            user_id = -1;
        }
        if (m == jComboBoxUser1.getItemCount() - 1) {
            analyst_id = -1;
        }
        saveData(user_id, analyst_id);
        //刷新客户清单
        if (fetch_way == FETCH_BY_FUND_ACCOUNT) {
            user_id = JFrameLogin.user_id;

            long base = 180000000000L;
            long fund_account = 0L;
            String FundAccount = jTextFieldFundAccount.getText().trim();
            String WholeAccount = null;
            try {
                fund_account = Long.valueOf(FundAccount).longValue();
                if (fund_account < 1000000000L) {
                    fund_account = base + fund_account;
                    WholeAccount = Long.valueOf(fund_account).toString();
                } else {
                    WholeAccount = FundAccount;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "输入帐号格式错！");
                return;
            }
            String sql = "execute get_client_info ";
            sql = sql + user_id + "," + fund_account;
            JDBTableModel dm = new JDBTableModel(jTable1);
            dm.fetchDataToTable(Main.conn, sql, columnType, addSerial);

        } else if (fetch_way == FETCH_BY_FILTER) {

            boolean readAll = false;
            fetch_way = FETCH_BY_FILTER;
            double asset_bottom = 0.0;
            double asset_top = 9999999999.99;
            String s = jTextFieldBottom.getText();
            String s1 = jTextFieldTop.getText();
            if (!s.isEmpty()) {
                try {
                    asset_bottom = Double.valueOf(s).doubleValue();
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "资产下限数据格式错！");
                    return;
                }
            }
            if (!s1.isEmpty()) {
                try {
                    asset_top = Double.valueOf(s1).doubleValue();
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "资产上限数据格式错！");
                    return;
                }
            }
            String Date1 = jTextFieldDate1.getText().trim();
            if (!Date1.equals("") && !isValidDateString(Date1)) {
                JOptionPane.showMessageDialog(this, "开户日期1输入错!");
                return;
            }
            String Date2 = jTextFieldDate2.getText().trim();
            if (!Date2.equals("") && !isValidDateString(Date2)) {
                JOptionPane.showMessageDialog(this, "开户日期2输入错!");
                return;
            }
            String agent = jTextFieldAgent.getText().trim();
            String account_status = jComboBoxStatus.getSelectedItem().toString();
            fetchData(forService, readAll, asset_bottom, asset_top, agent, Date1, Date2, account_status);
        } else {
            boolean readAll = true;
            fetch_way = FETCH_ALL;
            double asset_bottom = 0.00;
            double asset_top = 99999999999.99;
            String s = jTextFieldBottom.getText().trim();
            String s1 = jTextFieldTop.getText().trim();
            if (!s.isEmpty()) {
                try {
                    asset_bottom = Double.valueOf(s).doubleValue();
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "资产下限数据格式错！");
                    return;
                }
            }

            if (!s1.isEmpty()) {
                try {
                    asset_top = Double.valueOf(s1).doubleValue();
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "资产上限数据格式错！");
                    return;
                }
            }

            String Date1 = jTextFieldDate1.getText().trim();
            if (!Date1.equals("") && !isValidDateString(Date1)) {
                JOptionPane.showMessageDialog(this, "开户日期1输入错!");
                return;
            }
            String Date2 = jTextFieldDate2.getText().trim();
            if (!Date2.equals("") && !isValidDateString(Date2)) {
                JOptionPane.showMessageDialog(this, "开户日期2输入错!");
                return;
            }
            if (Date1.equals("")) {
                Date1 = "19000101";
            }
            if (Date2.equals("")) {
                Date2 = getDateString();
            }
            String agent = jTextFieldAgent.getText().trim();
            String account_status = jComboBoxStatus.getSelectedItem().toString();
            fetchData(forService, readAll, asset_bottom, asset_top, agent, Date1, Date2, account_status);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public void saveData(int service_person_id, int analyst_id) {
        int r = jTable2.getRowCount();
        boolean isError = false;
        DefaultTableModel dm = (DefaultTableModel) jTable2.getModel();
        for (int i = 0; i < r; i++) {
            long fundAccount = (Long) dm.getValueAt(i, 1);

            String msg = assignServicePerson(service_person_id, analyst_id, fundAccount);
            if (!msg.trim().equals("安排成功!") && !msg.trim().equals("取消成功!")) {
                msg = msg + ",帐号:" + fundAccount;
                JOptionPane.showMessageDialog(this, msg);
                isError = true;
            }
        }
        if (!isError) {
            JOptionPane.showMessageDialog(this, "数据已保存");
        }
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        boolean readAll = false;
        fetch_way = FETCH_BY_FILTER;
        double asset_bottom = 0.0;
        double asset_top = 9999999999.99;
        String s = jTextFieldBottom.getText();
        String s1 = jTextFieldTop.getText();
        if (!s.isEmpty()) {
            try {
                asset_bottom = Double.valueOf(s).doubleValue();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "资产下限数据格式错！");
                return;
            }
        }
        if (!s1.isEmpty()) {
            try {
                asset_top = Double.valueOf(s1).doubleValue();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "资产上限数据格式错！");
                return;
            }
        }
        String Date1 = jTextFieldDate1.getText().trim();
        if (!Date1.equals("") && !isValidDateString(Date1)) {
            JOptionPane.showMessageDialog(this, "开户日期1输入错!");
            return;
        }
        String Date2 = jTextFieldDate2.getText().trim();
        if (!Date2.equals("") && !isValidDateString(Date2)) {
            JOptionPane.showMessageDialog(this, "开户日期2输入错!");
            return;
        }
        if (Date1.equals("")) {
            Date1 = "19000101";
        }
        if (Date2.equals("")) {
            Date2 = getDateString();
        }
        String agent = jTextFieldAgent.getText().trim();
        String account_status = jComboBoxStatus.getSelectedItem().toString();
        fetchData(forService, readAll, asset_bottom, asset_top, agent, Date1, Date2, account_status);
        MainMenu.makeFace(jTable1);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        boolean readAll = true;
        fetch_way = FETCH_ALL;
        double asset_bottom = 0.00;
        double asset_top = 99999999999.99;


        String s = jTextFieldBottom.getText().trim();
        String s1 = jTextFieldTop.getText().trim();
        if (!s.isEmpty()) {
            try {
                asset_bottom = Double.valueOf(s).doubleValue();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "资产下限数据格式错！");
                return;
            }
        }

        if (!s1.isEmpty()) {
            try {
                asset_top = Double.valueOf(s1).doubleValue();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "资产上限数据格式错！");
                return;
            }
        }
        String Date1 = jTextFieldDate1.getText().trim();
        if (!Date1.equals("") && !isValidDateString(Date1)) {
            JOptionPane.showMessageDialog(this, "开户日期1输入错!");
            return;
        }
        String Date2 = jTextFieldDate2.getText().trim();
        if (!Date2.equals("") && !isValidDateString(Date2)) {
            JOptionPane.showMessageDialog(this, "开户日期2输入错!");
            return;
        }

        if (Date1.equals("")) {
            Date1 = "19000101";
        }
        if (Date2.equals("")) {
            Date2 = getDateString();
        }
        String agent = jTextFieldAgent.getText().trim();

        String account_status = jComboBoxStatus.getSelectedItem().toString();
        fetchData(forService, readAll, asset_bottom, asset_top, agent, Date1, Date2, account_status);
        MainMenu.makeFace(jTable1);

    }//GEN-LAST:event_jButton7ActionPerformed

    private boolean isValidDateString(String dateStr) {
        boolean yes = true;
        if (dateStr.trim().length() != 8) {
            yes = false;
        }
        String yearStr = dateStr.substring(0, 4);
        String monthStr = dateStr.substring(4, 6);
        String dayStr = dateStr.substring(6);
        try {
            int year = Integer.valueOf(yearStr);
            int month = Integer.valueOf(monthStr);
            int day = Integer.valueOf(dayStr);
            if (year < 1900 || year > 2020 || month < 1 || month > 12 || day < 1 || day > 31) {
                yes = false;
            }
        } catch (NumberFormatException e) {
            yes = false;
        }
        return yes;
    }

    String getDateString() {
        String date = "1900";
        GregorianCalendar d = new GregorianCalendar();
        int thisYear = d.get(Calendar.YEAR);
        int thisMonth = d.get(Calendar.MONTH) + 1;
        int thisDay = d.get(Calendar.DAY_OF_MONTH);
        date = String.format("%4d%02d%02d", thisYear, thisMonth, thisDay);
        return date;
    }

    public void fetchData(boolean forservice, boolean readAll, double asset_bottom, double asset_top, String agent, String Date1, String Date2, String account_status) {
        String sql = "";
        int user_id = JFrameLogin.user_id;
        int query_way = 1;//读全部的客户

        if (!readAll) {
            query_way = 2;//只读未安排的客户
        }

        if (forservice && Main.workFlow.trim().endsWith("先回访再服务")) { //安排服务（需要先做回访）
            if (agent.equals("")) {
                sql = "execute get_client_list1 " + user_id + "," + query_way + ",";
                sql = sql + asset_bottom + "," + asset_top + ",null,'" + Date1 + "','" + Date2 + "','" + account_status + "'";
            } else {
                sql = "execute get_client_list1 " + user_id + "," + query_way + ",";
                sql = sql + asset_bottom + "," + asset_top + ",'" + agent + "','" + Date1 + "','" + Date2 + "','" + account_status + "'";
            }

        }
        if (!forservice || (forservice && !Main.workFlow.trim().endsWith("先回访再服务"))) //安排回访 或不需回访直接做服务安排
        {
            if (agent.equals("")) {
                sql = "execute get_client_list2 " + user_id + "," + query_way + ",";
                sql = sql + asset_bottom + "," + asset_top + ",null,'" + Date1 + "','" + Date2 + "','" + account_status + "'";
            } else {
                sql = "execute get_client_list2 " + user_id + "," + query_way + ",";
                sql = sql + asset_bottom + "," + asset_top + ",'" + agent + "','" + Date1 + "','" + Date2 + "','" + account_status + "'";
            }
        }
        System.out.println(sql);
        JDBTableModel dm = new JDBTableModel(jTable1);
        addSerial = true;
        dm.fetchDataToTable(Main.conn, sql, columnType, addSerial);
        MainMenu.makeFace(jTable1);
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBoxUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxUserMouseClicked
    }//GEN-LAST:event_jComboBoxUserMouseClicked

    private void jComboBoxUserPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBoxUserPropertyChange
    }//GEN-LAST:event_jComboBoxUserPropertyChange

    private void jComboBoxUserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxUserFocusGained
    }//GEN-LAST:event_jComboBoxUserFocusGained

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        int user_id = JFrameLogin.user_id;

        long base = 0L;
        long fund_account = 0L;
        String FundAccount = jTextFieldFundAccount.getText().trim();
        String WholeAccount = null;

        if (Main.branchID >= 10) {
            base = Main.branchID * 10000000000L;
            try {
                fund_account = Long.valueOf(FundAccount).longValue();
                if (fund_account < 1000000000L) {
                    fund_account = base + fund_account;
                    WholeAccount = Long.valueOf(fund_account).toString();
                } else {
                    WholeAccount = FundAccount;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "帐号数据格式错！");
                return;
            }
        } else {
            base = Main.branchID * 10000000000L;
            try {
                fund_account = Long.valueOf(FundAccount).longValue();
                if (fund_account < 10000000000L) {
                    fund_account = base + fund_account;
                    WholeAccount = "0" + Long.valueOf(fund_account).toString();
                } else {
                    WholeAccount = FundAccount;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "帐号数据格式错！");
                return;
            }
        }

        jTextFieldFundAccount.setText(WholeAccount);
        String sql = "execute get_client_info ";
        sql = sql + user_id + "," + fund_account;
        JDBTableModel dm = new JDBTableModel(jTable1);

        addSerial = true;
        dm.fetchDataToTable(Main.conn, sql, columnType, addSerial);
        fetch_way = FETCH_BY_FUND_ACCOUNT;
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jCheckBoxNoAgentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxNoAgentActionPerformed
        if (jCheckBoxNoAgent.isSelected()) {
            jTextFieldAgent.setText("无经纪人");
            jTextFieldAgent.setEditable(false);
        } else {
            jTextFieldAgent.setText("");
            jTextFieldAgent.setEditable(true);
        }

}//GEN-LAST:event_jCheckBoxNoAgentActionPerformed

    private void jComboBoxUser1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxUser1MouseClicked
    }//GEN-LAST:event_jComboBoxUser1MouseClicked

    private void jComboBoxUser1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxUser1FocusGained
    }//GEN-LAST:event_jComboBoxUser1FocusGained

    private void jComboBoxUser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBoxUser1PropertyChange
    }//GEN-LAST:event_jComboBoxUser1PropertyChange
    public String assignServicePerson(int service_person_id, int analyst_id, long fund_account) {
        String returnMessage = "保存成功";
        String sql = "";
        if (forService) { //安排服务员
            sql = "assign_service_person " + service_person_id + "," + fund_account + "," + analyst_id + "," + JFrameLogin.user_id;
        } else {
            sql = "assign_back_caller " + service_person_id + "," + fund_account;
        }
        System.out.println(sql);
        SqlExecutor sqlx = new SqlExecutor();
        returnMessage = sqlx.execute2(Main.conn, sql);
        return returnMessage;
    }

    Vector servicePerson;
    Vector servicePersonID;
    Vector analyst;
    Vector analystID;
    boolean hasSelected = false;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JCheckBox jCheckBoxNoAgent;
    private javax.swing.JComboBox jComboBoxStatus;
    private javax.swing.JComboBox jComboBoxUser;
    private javax.swing.JComboBox jComboBoxUser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextFieldAgent;
    private javax.swing.JTextField jTextFieldBottom;
    private javax.swing.JTextField jTextFieldDate1;
    private javax.swing.JTextField jTextFieldDate2;
    private javax.swing.JTextField jTextFieldFundAccount;
    private javax.swing.JTextField jTextFieldMsg;
    private javax.swing.JTextField jTextFieldTop;
    // End of variables declaration//GEN-END:variables
}

